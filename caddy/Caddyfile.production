{
    # Enable admin API for SSL management
    admin 0.0.0.0:2019
    # Enable automatic HTTPS
    auto_https ignore_loaded_certs
    # Enable debug for troubleshooting
    debug
    # Add email for Let's Encrypt
    email meriem.hqiaq@gmail.com
}

# Main domain configuration
jalalbarber.com {
    # Disable TLS for testing
    tls off

    # Common headers for security
    header {
        Access-Control-Allow-Origin "{$CORS_ALLOW_ORIGIN}"
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Accept, Content-Type, Authorization"
        Access-Control-Allow-Credentials "true"
        Access-Control-Max-Age "3600"
        Strict-Transport-Security "max-age=31536000; includeSubDomains"
        X-Content-Type-Options "nosniff"
        Referrer-Policy "no-referrer-when-downgrade"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
    }

    # Handle OPTIONS requests
    @options {
        method OPTIONS
    }
    respond @options 204

    # Backend API routes
    handle_path /api/* {
        root * /var/www/html/public
        php_fastcgi backend:9000
        file_server
    }

    # Frontend routes - reverse proxy to production frontend
    reverse_proxy /* frontend:{$FRONTEND_PORT} {
        header_up Host {host}
        header_up X-Real-IP {remote}
    }

    # Error handling
    handle_errors {
        respond "{http.error.status_code} {http.error.status_text}"
    }

    log {
        output stdout
        format console
        level INFO
    }

    # Enable compression
    encode gzip
}

# Mercure Hub subdomain configuration
mercure.jalalbarber.com {
    # Disable TLS for testing
    tls off

    header {
        Access-Control-Allow-Origin "{http.request.header.Origin}"
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Accept, Content-Type, Authorization, Cache-Control, Last-Event-ID, Link, Urgency"
        Access-Control-Allow-Credentials "true"
        Access-Control-Expose-Headers "*"
        Access-Control-Max-Age "3600"
        # Required for EventSource connections
        Cache-Control "no-cache"
        Content-Type "text/event-stream"
        Connection "keep-alive"
        X-Accel-Buffering "no"
    }

    # Handle OPTIONS requests for Mercure
    @options {
        method OPTIONS
    }
    respond @options 204 {
        header Access-Control-Allow-Origin "{http.request.header.Origin}"
        header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        header Access-Control-Allow-Headers "Accept, Content-Type, Authorization, Cache-Control, Last-Event-ID, Link, Urgency"
        header Access-Control-Allow-Credentials "true"
        header Access-Control-Max-Age "3600"
    }

    mercure {
        publisher_jwt "{$MERCURE_PUBLISHER_JWT_KEY}"
        subscriber_jwt "{$MERCURE_SUBSCRIBER_JWT_KEY}"
        cors_origins "{$CORS_ALLOW_ORIGIN}"
        anonymous
        subscriptions
        transport_url "bolt:///data/mercure.db"
    }

    # Enable compression for Mercure
    encode gzip
}

# Internal Mercure Hub (for Docker network)
:9999 {
    header {
        Access-Control-Allow-Origin "*"
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Accept, Content-Type, Authorization, Cache-Control, Last-Event-ID, Link, Urgency"
        Access-Control-Allow-Credentials "true"
        Access-Control-Expose-Headers "*"
        Access-Control-Max-Age "3600"
        Cache-Control "no-cache"
        Content-Type "text/event-stream"
        Connection "keep-alive"
        X-Accel-Buffering "no"
    }

    mercure {
        publisher_jwt "{$MERCURE_PUBLISHER_JWT_KEY}"
        subscriber_jwt "{$MERCURE_SUBSCRIBER_JWT_KEY}"
        cors_origins "*"
        anonymous
        subscriptions
        transport_url "bolt:///data/mercure.db"
    }
}