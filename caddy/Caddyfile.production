{
    # Enable admin API for SSL management
    admin 0.0.0.0:2019
    # Enable automatic HTTPS
    auto_https ignore_loaded_certs
    # Enable debug for troubleshooting
    debug
}

# Main domain configuration
jalalbarber.com {
    # Common headers for security
    header {
        Access-Control-Allow-Origin {$CORS_ALLOW_ORIGIN}
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Accept, Content-Type, Authorization"
        Access-Control-Allow-Credentials "true"
        Access-Control-Max-Age "3600"
        Strict-Transport-Security "max-age=31536000; includeSubDomains"
        X-Content-Type-Options "nosniff"
        Referrer-Policy "no-referrer-when-downgrade"
        # Security headers
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        defer
    }

    # Handle OPTIONS requests
    @options {
        method OPTIONS
    }
    handle @options {
        respond 204
    }

    # Backend API routes
    handle /api/* {
        root * /var/www/html/public
        php_fastcgi backend:9000
        file_server
    }

    # Frontend routes - reverse proxy to production frontend
    handle {
        # Set default MIME types for common files
        header {
            Content-Type {header.Response.Content-Type}
        }

        # Add specific MIME types
        @jsfiles {
            path *.js
        }
        header @jsfiles Content-Type "application/javascript"

        @jsonfiles {
            path *.json
        }
        header @jsonfiles Content-Type "application/json"

        @cssfiles {
            path *.css
        }
        header @cssfiles Content-Type "text/css"

        @htmlfiles {
            path *.html
        }
        header @htmlfiles Content-Type "text/html; charset=utf-8"

        # Service Worker specific configuration
        @serviceworker {
            path /sw.js
        }
        header @serviceworker {
            Content-Type "application/javascript"
            Service-Worker-Allowed "/"
            Cache-Control "no-cache"
        }

        # Manifest specific configuration
        @manifest {
            path /manifest.json
        }
        header @manifest {
            Content-Type "application/json"
            Cache-Control "no-cache"
        }

        reverse_proxy frontend:{$FRONTEND_PORT} {
            header_up Host {host}
            header_up X-Real-IP {remote}
        }
    }

    # Error handling
    handle_errors {
        respond "{http.error.status_code} {http.error.status_text}"
    }

    log {
        output stdout
        format console
        level INFO
    }

    # Enable compression
    encode gzip
}

# Mercure Hub subdomain configuration
mercure.jalalbarber.com {
    header {
        Access-Control-Allow-Origin {http.request.header.Origin}
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Accept, Content-Type, Authorization, Cache-Control, Last-Event-ID, Link, Urgency"
        Access-Control-Allow-Credentials true
        Access-Control-Expose-Headers "*"
        Access-Control-Max-Age "3600"
        # Required for EventSource connections
        Cache-Control "no-cache"
        Content-Type "text/event-stream"
        Connection "keep-alive"
        X-Accel-Buffering "no"
        defer
    }

    # Handle OPTIONS requests for Mercure
    @options {
        method OPTIONS
    }
    handle @options {
        header {
            Access-Control-Allow-Origin {http.request.header.Origin}
            Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
            Access-Control-Allow-Headers "Accept, Content-Type, Authorization, Cache-Control, Last-Event-ID, Link, Urgency"
            Access-Control-Allow-Credentials true
            Access-Control-Max-Age "3600"
            defer
        }
        respond 204
    }

    mercure {
        publisher_jwt {$MERCURE_PUBLISHER_JWT_KEY}
        subscriber_jwt {$MERCURE_SUBSCRIBER_JWT_KEY}
        cors_origins {$CORS_ALLOW_ORIGIN}
        anonymous
        subscriptions
        transport_url bolt:///data/mercure.db
    }

    # Enable compression for Mercure
    encode gzip
}

# Internal Mercure Hub (for Docker network)
:9999 {
    header {
        Access-Control-Allow-Origin "*"
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Accept, Content-Type, Authorization, Cache-Control, Last-Event-ID, Link, Urgency"
        Access-Control-Allow-Credentials true
        Access-Control-Expose-Headers "*"
        Access-Control-Max-Age "3600"
        Cache-Control "no-cache"
        Content-Type "text/event-stream"
        Connection "keep-alive"
        X-Accel-Buffering "no"
        defer
    }

    mercure {
        publisher_jwt {$MERCURE_PUBLISHER_JWT_KEY}
        subscriber_jwt {$MERCURE_SUBSCRIBER_JWT_KEY}
        cors_origins "*"
        anonymous
        subscriptions
        transport_url bolt:///data/mercure.db
    }
} 