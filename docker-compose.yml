version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: symfony_api
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/docker
    env_file:
      - ./backend/.env.${APP_ENV:-development}
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - CORS_ALLOW_ORIGIN=${CORS_ALLOW_ORIGIN:-http://localhost:5173 http://localhost:4173 http://localhost:8000 http://145.223.88.184:8000 http://jalalbarber.com}
      - JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem
      - JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem
      - JWT_PASSPHRASE=80e75e1ceea2218d7be4a9d66df9d5b9752a069f337bbdcd97187991132d1ff3
      - DATABASE_URL=postgresql://user:password@database:5432/app_db
      - SYMFONY_DOTENV_VARS=CORS_ALLOW_ORIGIN
      - APP_RUNTIME_ENV=dev
    depends_on:
      - database
    networks:
      - app_network

  caddy:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    container_name: caddy_server
    ports:
      - "8000:80"  # Backend API on port 8000
    volumes:
      - ./backend:/var/www/html
      - ./caddy/Caddyfile.caddy:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - CORS_ALLOW_ORIGIN=${CORS_ALLOW_ORIGIN:-http://localhost:5173 http://localhost:4173 http://localhost:8000 http://145.223.88.184:8000 http://jalalbarber.com}
      - MERCURE_PUBLIC_URL=${MERCURE_PUBLIC_URL:-http://localhost:9999/.well-known/mercure}
    depends_on:
      - backend
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${FRONTEND_TARGET:-development}
    container_name: barbershop-frontend
    env_file:
      - ./frontend/.env.${APP_ENV:-development}
    ports:
      - "80:80"  # Frontend on port 80
      - "443:443"  # SSL port
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./certbot/conf:/etc/nginx/ssl:ro  # SSL certificates
    networks:
      - app_network

  database:
    image: postgres:15-alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - app_network

  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    container_name: notification_service
    volumes:
      - ./notification:/app:rw
      - notification_sessions:/app/sessions:rw
    environment:
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - TELEGRAM_PHONE_NUMBER=${TELEGRAM_PHONE_NUMBER}
      - BARBERSHOP_NAME=${BARBERSHOP_NAME}
      - BARBERSHOP_MAPS_LINK=${BARBERSHOP_MAPS_LINK}
      - BARBERSHOP_PHONE=${BARBERSHOP_PHONE}
      - FLASK_APP=app.py
      - FLASK_ENV=development
    ports:
      - "5000:5000"
    networks:
      - app_network
    depends_on:
      - backend

  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    container_name: mercure_hub
    environment:
      SERVER_NAME: ':9999'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://145.223.88.184 http://145.223.88.184:8000 http://jalalbarber.com http://145.223.88.184:9999
        cors_credentials true
        anonymous
        subscriptions
    ports:
      - "9999:80"
    volumes:
      - mercure_data:/data
      - ./caddy/Caddyfile.mercure:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app_network
    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  notification_sessions:
  mercure_data: