version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: symfony_api
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/docker
    environment:
      - APP_ENV=dev
      - CORS_ALLOW_ORIGIN=^https?://(localhost|127\.0\.0\.1|54\.37\.66\.72)(:[0-9]+)?$
      - JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem
      - JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem
      - JWT_PASSPHRASE=80e75e1ceea2218d7be4a9d66df9d5b9752a069f337bbdcd97187991132d1ff3
      - DATABASE_URL=postgresql://user:password@database:5432/app_db
      - SYMFONY_DOTENV_VARS=CORS_ALLOW_ORIGIN
      - APP_RUNTIME_ENV=dev
    depends_on:
      - database
    networks:
      - app_network

  caddy:
    image: caddy:2-alpine
    container_name: caddy_server
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ./backend:/var/www/html
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - backend
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_app
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app_network
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://54.37.66.72:8000

  database:
    image: postgres:15-alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  caddy_data:
  caddy_config: