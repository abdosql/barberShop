{% extends 'base.html.twig' %}

{% block title %}Shop Status Monitor{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="text-center mb-0">Shop Status</h3>
                    </div>
                    <div class="card-body text-center">
                        <div id="status-indicator" class="mb-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                        <h4 id="status-text" class="mb-3">Loading status...</h4>
                        <p id="last-updated" class="text-muted">Last updated: ...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .status-open {
            color: #198754;
            font-weight: bold;
        }
        .status-closed {
            color: #dc3545;
            font-weight: bold;
        }
        #status-indicator {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            margin: 0 auto;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .indicator-open {
            background-color: #198754;
        }
        .indicator-closed {
            background-color: #dc3545;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Function to format date
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleString();
        }

        // Function to update the UI
        function updateShopStatus(status) {
            const statusIndicator = document.getElementById('status-indicator');
            const statusText = document.getElementById('status-text');
            const lastUpdated = document.getElementById('last-updated');

            // Remove spinner if present
            statusIndicator.innerHTML = '';
            
            // Update status indicator
            statusIndicator.className = status.isOpen ? 'indicator-open' : 'indicator-closed';
            
            // Update status text
            statusText.textContent = status.isOpen ? 'OPEN' : 'CLOSED';
            statusText.className = status.isOpen ? 'status-open' : 'status-closed';
            
            // Update last updated time
            lastUpdated.textContent = `Last updated: ${formatDate(status.lastUpdated)}`;
        }

        // Subscribe to Mercure hub
        const url = new URL("{{ mercure_public_url }}");
        const scheme = url.protocol.replace(':', '');
        const host = url.hostname;
        url.searchParams.append('topic', `${scheme}://${host}/shop-status/`);
        url.searchParams.append('topic', `${scheme}://${host}/shop-status/*`);
        
        const eventSource = new EventSource(url, {
            withCredentials: false
        });

        // Handle incoming messages
        eventSource.onmessage = event => {
            console.log('Received update:', event.data);
            const status = JSON.parse(event.data);
            updateShopStatus(status);
        };

        // Handle connection errors
        eventSource.onerror = error => {
            console.error('EventSource failed:', error);
            const statusText = document.getElementById('status-text');
            statusText.textContent = 'Connection Error';
            statusText.className = 'text-danger';
        };

        // Add connection status indicator
        eventSource.onopen = () => {
            console.log('Connected to Mercure hub');
            const statusText = document.getElementById('status-text');
            if (statusText.textContent === 'Connection Error') {
                statusText.textContent = 'Loading status...';
                statusText.className = '';
            }
        };
    </script>
{% endblock %}